require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe AccmodsController do

  login_admin

  def mock_accmod(stubs={})
    @mock_accmod ||= mock_model(Accmod, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all accmods as @accmods" do
      get :index
      response.should be_success
    end
  end

  describe "GET new" do
    it "assigns a new accmod as @accmod" do
      Accmod.stub(:new) { mock_accmod }
      get :new
      assigns(:accmod).should be(mock_accmod)
    end
  end

  describe "GET edit" do
    it "assigns the requested accmod as @accmod" do
      Accmod.stub(:find).with("37") { mock_accmod }
      get :edit, :id => "37"
      assigns(:accmod).should be(mock_accmod)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created accmod as @accmod" do
        Accmod.stub(:new).with({'these' => 'params'}) { mock_accmod(:save => true) }
        post :create, :accmod => {'these' => 'params'}
        assigns(:accmod).should be(mock_accmod)
      end

      it "redirects to the created accmod" do
        Accmod.stub(:new) { mock_accmod(:save => true) }
        post :create, :accmod => {}
        response.should redirect_to(accmods_url)
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved accmod as @accmod" do
        Accmod.stub(:new).with({'these' => 'params'}) { mock_accmod(:save => false) }
        post :create, :accmod => {'these' => 'params'}
        assigns(:accmod).should be(mock_accmod)
      end

      it "re-renders the 'new' template" do
        Accmod.stub(:new) { mock_accmod(:save => false) }
        post :create, :accmod => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested accmod" do
        Accmod.stub(:find).with("37") { mock_accmod }
        mock_accmod.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :accmod => {'these' => 'params'}
      end

      it "assigns the requested accmod as @accmod" do
        Accmod.stub(:find) { mock_accmod(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:accmod).should be(mock_accmod)
      end

      it "redirects to the accmod" do
        Accmod.stub(:find) { mock_accmod(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(accmods_url)
      end
    end

    describe "with invalid params" do
      it "assigns the accmod as @accmod" do
        Accmod.stub(:find) { mock_accmod(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:accmod).should be(mock_accmod)
      end

      it "re-renders the 'edit' template" do
        Accmod.stub(:find) { mock_accmod(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested accmod" do
      Accmod.stub(:find).with("37") { mock_accmod }
      mock_accmod.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the accmods list" do
      Accmod.stub(:find) { mock_accmod }
      delete :destroy, :id => "1"
      response.should redirect_to(accmods_url)
    end
  end

end
